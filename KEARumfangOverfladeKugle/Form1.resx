<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        F6Vh/SNWWl5cAAAAAElFTkSuQmCC
</value>
  </data>
</root>